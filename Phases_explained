In penetration testing (pentesting), the process typically follows a structured methodology consisting of several attack phases. Below is a breakdown of each phase along with tools commonly used in each stage, and examples of how these tools are applied.

### **1. Reconnaissance (Information Gathering)**

**Goal**: Gather as much information as possible about the target before conducting any attacks. This phase can be active or passive.

- **Tools**:
  - **OSINT Tools**:
    - **Maltego**: Visual link analysis tool to gather information from public sources.
    - **theHarvester**: Gathers emails, subdomains, hosts, and IP addresses from search engines.
    - **Shodan**: Search engine for internet-connected devices (IoT, servers, etc.).
  - **Network Scanners**:
    - **Nmap**: Network mapping and vulnerability scanner.
    - **WHOIS**: Command-line tool to obtain domain registration data.
  - **Social Engineering**:
    - **Google Dorking**: Advanced search techniques to discover sensitive information.
    - **Recon-ng**: Web reconnaissance framework for gathering information about the target.

**Example**: A pentester might use **Maltego** to discover relationships between domain names, email addresses, and public records, and then use **Nmap** to identify open ports and services running on a network.

---

### **2. Scanning and Enumeration**

**Goal**: Identify active hosts, open ports, services, and any vulnerabilities.

- **Tools**:
  - **Nmap**: Comprehensive network scanning tool for discovering hosts and services.
  - **Nessus**: Vulnerability scanner that checks for known security issues.
  - **OpenVAS**: Another vulnerability scanner, often used as an open-source alternative to Nessus.
  - **Netcat**: Networking utility to read/write data over the network.
  - **Nikto**: Web server scanner for vulnerabilities.

**Example**: Using **Nmap**, the pentester performs a port scan to find open ports and identifies that **SSH** is running on port 22. A subsequent vulnerability scan using **Nessus** reveals that the SSH version has a known vulnerability, making it a potential entry point.

---

### **3. Gaining Access (Exploitation)**

**Goal**: Use the vulnerabilities discovered to gain unauthorized access to the target system.

- **Tools**:
  - **Metasploit Framework**: One of the most popular exploitation frameworks for executing payloads on a vulnerable system.
  - **SQLmap**: Automates the process of detecting and exploiting SQL injection vulnerabilities.
  - **Burp Suite**: Proxy tool to exploit web vulnerabilities such as SQL injection, XSS, etc.
  - **Hydra**: Tool for brute-force attacks, typically used against login forms, SSH, and FTP.

**Example**: After discovering a vulnerability in the SSH service, the pentester uses **Metasploit** to deliver an exploit and gain a reverse shell on the target system. Alternatively, a web pentester might use **SQLmap** to exploit a SQL injection vulnerability and dump the database.

---

### **4. Maintaining Access**

**Goal**: Once inside, the pentester aims to ensure long-term access to the compromised system without detection.

- **Tools**:
  - **Metasploit** (Persistence modules): Used to plant backdoors or persistent shells.
  - **Netcat**: Can be used as a backdoor to establish connections at will.
  - **Empire**: Post-exploitation framework that helps maintain persistence and execute further attacks.

**Example**: After exploiting a vulnerability, the pentester uses **Metasploit** to set up a persistent backdoor on the compromised server so they can regain access even after a reboot. They may also install **Netcat** as a listener to allow for future connections.

---

### **5. Privilege Escalation**

**Goal**: Escalate privileges to gain administrative or root access to the system.

- **Tools**:
  - **Metasploit**: Contains several privilege escalation modules.
  - **Linux Exploit Suggester**: Suggests privilege escalation vulnerabilities based on system information.
  - **Windows Exploit Suggester**: Similar tool for Windows privilege escalation.
  - **LinPEAS**/**WinPEAS**: Scripts for privilege escalation auditing in Linux and Windows.

**Example**: The pentester uses **Linux Exploit Suggester** to find a privilege escalation vulnerability in an outdated kernel and uses the corresponding exploit in **Metasploit** to elevate to root access.

---

### **6. Post-Exploitation (Data Extraction)**

**Goal**: Identify sensitive data, extract it, and possibly exfiltrate it to demonstrate the severity of the breach.

- **Tools**:
  - **Metasploit**: Can be used to extract password hashes and other sensitive information.
  - **Mimikatz**: Popular for dumping credentials on Windows machines.
  - **Responder**: A tool for poisoning LLMNR, NBT-NS, and DNS to capture sensitive data.
  - **John the Ripper**/**Hashcat**: Tools to crack password hashes.

**Example**: The pentester uses **Mimikatz** to dump the credentials of users logged into the compromised system. They then use **Hashcat** to crack weak passwords and gain access to additional accounts or systems.

---

### **7. Covering Tracks**

**Goal**: Erase any signs of the attack to prevent detection by security systems or personnel.

- **Tools**:
  - **Metasploit**: Contains modules to clear logs.
  - **shell history** manipulation: Alter or delete shell command history (e.g., `.bash_history`).
  - **Auditpol**: Can be used on Windows to modify auditing policies and hide traces of activity.

**Example**: After completing the attack, the pentester clears the event logs on the Windows server using **Metasploit**'s log clearing module to erase any traces of the exploitation and activities that occurred.

---

### **8. Reporting**

**Goal**: Create a detailed report outlining the vulnerabilities found, the exploits used, and recommendations for remediation.

- **Tools**:
  - **Dradis**: A reporting tool for pentesting engagements.
  - **Faraday**: Collaborative platform for vulnerability management and reporting.
  - **Metasploit Pro**: Offers built-in reporting features.

**Example**: The pentester uses **Dradis** to create a comprehensive report that includes all the steps taken during the penetration test, the vulnerabilities identified, and suggested actions for mitigation

### Summary

- **Reconnaissance**: Maltego, theHarvester
- **Scanning**: Nmap, Nessus
- **Exploitation**: Metasploit, SQLmap
- **Maintaining Access**: Netcat, Empire
- **Privilege Escalation**: Linux Exploit Suggester, Metasploit
- **Post-Exploitation**: Mimikatz, Responder
- **Covering Tracks**: Auditpol, Metasploit
